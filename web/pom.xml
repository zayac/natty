<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<!-- POM file generated with GWT webAppCreator -->
	<modelVersion>4.0.0</modelVersion>
	<groupId>ru.natty</groupId>
	<artifactId>web</artifactId>
	<packaging>war</packaging>
	<version>1.0</version>
	<name>GWT Maven Archetype</name>

	<properties>
		<!-- Convenience property to set the GWT version -->
		<gwtVersion>2.1.0</gwtVersion>
		<!-- GWT needs at least java 1.5 -->
		<maven.compiler.source>1.5</maven.compiler.source>
		<maven.compiler.target>1.5</maven.compiler.target>
		<webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>2.2.0</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>2.2.0</version>
			<scope>compile</scope>
		</dependency>  
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>2.2.0</version>
			<scope>provided</scope>
		</dependency>  
		<dependency>
				<groupId>com.google.code.gwt-log</groupId>
				<artifactId>gwt-log</artifactId>
				<version>3.1.2</version>
		</dependency>
		<dependency>
				<groupId>org.miller</groupId>
				<artifactId>gwt-sound</artifactId>
				<version>1.0</version>
		</dependency>

		<dependency>
				<groupId>javax.persistence</groupId>
				<artifactId>persistence-api</artifactId>
				<version>1.0</version>
		</dependency>
		<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate</artifactId>
				<version>3.2.6.ga</version>
				<exclusions>
						<exclusion>
								<groupId>javax.transaction</groupId>
								<artifactId>jta</artifactId>
						</exclusion>
				</exclusions>
		</dependency>
		<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>3.4.0.GA</version>
		</dependency>
		<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>1.4.2</version>
		</dependency>
		<dependency>
				<groupId>c3p0</groupId>
				<artifactId>c3p0</artifactId>
				<version>0.9.1.2</version>
		</dependency>
		<dependency>
				<groupId>hsqldb</groupId>
				<artifactId>hsqldb</artifactId>
				<version>1.8.0.7</version>
		</dependency>
		<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.5</version>
				<scope>test</scope>
		</dependency>
</dependencies>

	<pluginRepositories>
		<pluginRepository>
			<id>maven.java.net</id>
			<name>Java.net Maven2 Repository</name>
			<url>http://download.java.net/maven/2</url>
		</pluginRepository>
		<pluginRepository>
			<id>glassfish-repository</id>
			<name>Java.net Repository for Glassfish</name>
			<url>http://download.java.net/maven/glassfish</url>
			<layout>default</layout>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</pluginRepository>

		<pluginRepository>
			<id>snapshot.ocean.net.au</id>
			<name>Ocean Snapshot Repository</name>
			<url>http://maven.ocean.net.au/snapshot</url>
			<releases>
				<enabled>false</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<build>
		<!-- Generate compiled stuff in the folder used for developing mode -->
		<outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>
		<plugins>

		<!-- Hibernate plugin -->
		<!--		<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>hibernate3-maven-plugin</artifactId>
				<version>2.2</version>
				<dependencies>
						<dependency>
								<groupId>postgresql</groupId>
								<artifactId>postgresql</artifactId>
								<version>8.3-603.jdbc4</version>
						</dependency>
				</dependencies>

		</plugin> -->


		<!-- GWT Maven Plugin -->
		<plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>gwt-maven-plugin</artifactId>
			<version>2.2.0</version>
			<executions>
				<execution>
					<goals>
						<goal>compile</goal>
						<!-- <goal>test</goal> -->
						<!-- <goal>i18n</goal> -->
						<goal>generateAsync</goal>
					</goals>
				</execution>
			</executions>
			<!-- Plugin configuration. There are many available options, see gwt-maven-plugin documentation at codehaus.org -->
			<configuration>
				<runTarget>mama.html</runTarget>
				<hostedWebapp>${webappDirectory}</hostedWebapp>
				<!-- <i18nMessagesBundle>ru.client.Messages</i18nMessagesBundle> -->
			</configuration>
		</plugin>

	  <!-- Copy static web files before executing gwt:run -->
	  <plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-war-plugin</artifactId>
		  <version>2.1.1</version>
		  <executions>
			  <execution>
				  <phase>compile</phase>
				  <goals>
					  <goal>exploded</goal>
				  </goals>
			  </execution>
		  </executions>
		  <configuration>
			  <webappDirectory>${webappDirectory}</webappDirectory>
		  </configuration>
	  </plugin>

	  <!-- Glassfish plugin -->
	  <!--	  <plugin>
		  <groupId>org.glassfish.maven.plugin</groupId>
		  <artifactId>maven-glassfish-plugin</artifactId>
		  <version>2.1</version>
		  <configuration>
			  <glassfishDirectory>${local.glassfish.home}</glassfishDirectory>
			  <user>${local.glassfish.user}</user>
			  <adminPassword>${local.glassfish.password}</adminPassword>
			  <debug>true</debug>
			  <echo>true</echo>
			  <terse>true</terse>
			  <skip>${test.int.skip}</skip>
			  <domain>
				  <name>${local.glassfish.domain}</name>
				  <adminPort>4848</adminPort>
				  <httpPort>8080</httpPort>
				  <reuse>false</reuse>
				  <jvmOptions>
					  <option>-Djava.security.auth.login.config=${project.build.testOutputDirectory}/login.conf</option>
				  </jvmOptions>
				  <properties>
					  <property>
						  <name>server.log-service.file</name>
						  <value>${domain.log.dir}/server.log</value>
					  </property>
				  </properties>
				  <auth>
					  <realm>
						  <name>testRealm</name>
						  <className>com.sun.enterprise.security.auth.realm.file.FileRealm</className>
						  <properties>
							  <property>
								  <name>jaas-context</name>
								  <value>test</value>
							  </property>
							  <property>
								  <name>file</name>
								  <value>${project.build.outputDirectory}/keyfile</value>
							  </property>
						  </properties>
					  </realm>
				  </auth>
				  <resourceDescriptor>setup/sun-resources.xml</resourceDescriptor>
			  </domain>
			  <components>
				  <component>
					  <name>${project.artifactId}</name>
					  <artifact>${project.build.directory}/${project.build.finalName}</artifact>
				  </component>
			  </components>
		  </configuration>
	  </plugin> -->
	</plugins>

  </build>

</project>
